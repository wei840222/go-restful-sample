// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/wei840222/go-restful-sample/storage (interfaces: TodoStorage)
//
// Generated by this command:
//
//	mockgen -destination=mock/todo.go -package=mock . TodoStorage
//

// Package mock is a generated GoMock package.
package mock

import (
	context "context"
	reflect "reflect"

	storage "github.com/wei840222/go-restful-sample/storage"
	gomock "go.uber.org/mock/gomock"
)

// MockTodoStorage is a mock of TodoStorage interface.
type MockTodoStorage struct {
	ctrl     *gomock.Controller
	recorder *MockTodoStorageMockRecorder
	isgomock struct{}
}

// MockTodoStorageMockRecorder is the mock recorder for MockTodoStorage.
type MockTodoStorageMockRecorder struct {
	mock *MockTodoStorage
}

// NewMockTodoStorage creates a new mock instance.
func NewMockTodoStorage(ctrl *gomock.Controller) *MockTodoStorage {
	mock := &MockTodoStorage{ctrl: ctrl}
	mock.recorder = &MockTodoStorageMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockTodoStorage) EXPECT() *MockTodoStorageMockRecorder {
	return m.recorder
}

// Create mocks base method.
func (m *MockTodoStorage) Create(ctx context.Context, todo *storage.Todo) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Create", ctx, todo)
	ret0, _ := ret[0].(error)
	return ret0
}

// Create indicates an expected call of Create.
func (mr *MockTodoStorageMockRecorder) Create(ctx, todo any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Create", reflect.TypeOf((*MockTodoStorage)(nil).Create), ctx, todo)
}

// Delete mocks base method.
func (m *MockTodoStorage) Delete(ctx context.Context, id int) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Delete", ctx, id)
	ret0, _ := ret[0].(error)
	return ret0
}

// Delete indicates an expected call of Delete.
func (mr *MockTodoStorageMockRecorder) Delete(ctx, id any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Delete", reflect.TypeOf((*MockTodoStorage)(nil).Delete), ctx, id)
}

// Get mocks base method.
func (m *MockTodoStorage) Get(ctx context.Context, id int) (storage.Todo, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Get", ctx, id)
	ret0, _ := ret[0].(storage.Todo)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Get indicates an expected call of Get.
func (mr *MockTodoStorageMockRecorder) Get(ctx, id any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Get", reflect.TypeOf((*MockTodoStorage)(nil).Get), ctx, id)
}

// List mocks base method.
func (m *MockTodoStorage) List(ctx context.Context) ([]storage.Todo, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "List", ctx)
	ret0, _ := ret[0].([]storage.Todo)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// List indicates an expected call of List.
func (mr *MockTodoStorageMockRecorder) List(ctx any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "List", reflect.TypeOf((*MockTodoStorage)(nil).List), ctx)
}

// Update mocks base method.
func (m *MockTodoStorage) Update(ctx context.Context, id int, todo storage.Todo) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Update", ctx, id, todo)
	ret0, _ := ret[0].(error)
	return ret0
}

// Update indicates an expected call of Update.
func (mr *MockTodoStorageMockRecorder) Update(ctx, id, todo any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Update", reflect.TypeOf((*MockTodoStorage)(nil).Update), ctx, id, todo)
}
